// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.49.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'package:meta/meta.dart';
import 'package:meta/meta.dart';
import 'dart:ffi' as ffi;

abstract class DisplayVideoTrackConstraintsApi {
  /// Creates new [`DisplayVideoTrackConstraints`] with none constraints
  /// configured.
  RefCellDisplayVideoTrackConstraints displayVideoTrackConstraintsNew(
      {dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDisplayVideoTrackConstraintsNewConstMeta;

  /// Sets an exact [deviceId][1] constraint.
  ///
  /// [1]: https://w3.org/TR/mediacapture-streams#def-constraint-deviceId
  void displayVideoTrackConstraintsDeviceId(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required String deviceId,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsDeviceIdConstMeta;

  /// Sets an exact [height][1] constraint.
  ///
  /// [1]: https://tinyurl.com/w3-streams#def-constraint-height
  void displayVideoTrackConstraintsExactHeight(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int exactHeight,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsExactHeightConstMeta;

  /// Sets an ideal [height][1] constraint.
  ///
  /// [1]: https://tinyurl.com/w3-streams#def-constraint-height
  void displayVideoTrackConstraintsIdealHeight(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int idealHeight,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsIdealHeightConstMeta;

  /// Sets an exact [width][1] constraint.
  ///
  /// [1]: https://tinyurl.com/w3-streams#def-constraint-width
  void displayVideoTrackConstraintsExactWidth(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int exactWidth,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsExactWidthConstMeta;

  /// Sets an ideal [width][1] constraint.
  ///
  /// [1]: https://tinyurl.com/w3-streams#def-constraint-width
  void displayVideoTrackConstraintsIdealWidth(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int idealWidth,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsIdealWidthConstMeta;

  /// Sets an ideal [frameRate][1] constraint.
  ///
  /// [1]: https://w3.org/TR/mediacapture-streams#dfn-framerate
  void displayVideoTrackConstraintsIdealFrameRate(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int idealFrameRate,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsIdealFrameRateConstMeta;

  /// Sets an exact [frameRate][1] constraint.
  ///
  /// [1]: https://w3.org/TR/mediacapture-streams#dfn-framerate
  void displayVideoTrackConstraintsExactFrameRate(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int exactFrameRate,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsExactFrameRateConstMeta;
}

@sealed
class RefCellDisplayVideoTrackConstraints extends FrbOpaque {
  RefCellDisplayVideoTrackConstraints.fromRaw(int ptr, int drop, int share)
      : super.unsafe(ptr, drop, share);
}

class DisplayVideoTrackConstraintsApiImpl
    implements DisplayVideoTrackConstraintsApi {
  final DisplayVideoTrackConstraintsApiPlatform _platform;
  factory DisplayVideoTrackConstraintsApiImpl(ExternalLibrary dylib) =>
      DisplayVideoTrackConstraintsApiImpl.raw(
          DisplayVideoTrackConstraintsApiPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory DisplayVideoTrackConstraintsApiImpl.wasm(
          FutureOr<WasmModule> module) =>
      DisplayVideoTrackConstraintsApiImpl(module as ExternalLibrary);
  DisplayVideoTrackConstraintsApiImpl.raw(this._platform);
  RefCellDisplayVideoTrackConstraints displayVideoTrackConstraintsNew(
      {dynamic hint}) {
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_display_video_track_constraints_new(),
      parseSuccessData:
          _wire2api_SyncReturn_RefCellDisplayVideoTrackConstraints,
      constMeta: kDisplayVideoTrackConstraintsNewConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsNewConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_new",
            argNames: [],
          );

  void displayVideoTrackConstraintsDeviceId(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required String deviceId,
      dynamic hint}) {
    var arg0 =
        _platform.api2wire_RefCellDisplayVideoTrackConstraints(constraints);
    var arg1 = _platform.api2wire_String(deviceId);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner
          .wire_display_video_track_constraints_device_id(arg0, arg1),
      parseSuccessData: _wire2api_SyncReturn_unit,
      constMeta: kDisplayVideoTrackConstraintsDeviceIdConstMeta,
      argValues: [constraints, deviceId],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsDeviceIdConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_device_id",
            argNames: ["constraints", "deviceId"],
          );

  void displayVideoTrackConstraintsExactHeight(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int exactHeight,
      dynamic hint}) {
    var arg0 =
        _platform.api2wire_RefCellDisplayVideoTrackConstraints(constraints);
    var arg1 = api2wire_u32(exactHeight);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner
          .wire_display_video_track_constraints_exact_height(arg0, arg1),
      parseSuccessData: _wire2api_SyncReturn_unit,
      constMeta: kDisplayVideoTrackConstraintsExactHeightConstMeta,
      argValues: [constraints, exactHeight],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsExactHeightConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_exact_height",
            argNames: ["constraints", "exactHeight"],
          );

  void displayVideoTrackConstraintsIdealHeight(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int idealHeight,
      dynamic hint}) {
    var arg0 =
        _platform.api2wire_RefCellDisplayVideoTrackConstraints(constraints);
    var arg1 = api2wire_u32(idealHeight);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner
          .wire_display_video_track_constraints_ideal_height(arg0, arg1),
      parseSuccessData: _wire2api_SyncReturn_unit,
      constMeta: kDisplayVideoTrackConstraintsIdealHeightConstMeta,
      argValues: [constraints, idealHeight],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsIdealHeightConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_ideal_height",
            argNames: ["constraints", "idealHeight"],
          );

  void displayVideoTrackConstraintsExactWidth(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int exactWidth,
      dynamic hint}) {
    var arg0 =
        _platform.api2wire_RefCellDisplayVideoTrackConstraints(constraints);
    var arg1 = api2wire_u32(exactWidth);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner
          .wire_display_video_track_constraints_exact_width(arg0, arg1),
      parseSuccessData: _wire2api_SyncReturn_unit,
      constMeta: kDisplayVideoTrackConstraintsExactWidthConstMeta,
      argValues: [constraints, exactWidth],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsExactWidthConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_exact_width",
            argNames: ["constraints", "exactWidth"],
          );

  void displayVideoTrackConstraintsIdealWidth(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int idealWidth,
      dynamic hint}) {
    var arg0 =
        _platform.api2wire_RefCellDisplayVideoTrackConstraints(constraints);
    var arg1 = api2wire_u32(idealWidth);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner
          .wire_display_video_track_constraints_ideal_width(arg0, arg1),
      parseSuccessData: _wire2api_SyncReturn_unit,
      constMeta: kDisplayVideoTrackConstraintsIdealWidthConstMeta,
      argValues: [constraints, idealWidth],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsIdealWidthConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_ideal_width",
            argNames: ["constraints", "idealWidth"],
          );

  void displayVideoTrackConstraintsIdealFrameRate(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int idealFrameRate,
      dynamic hint}) {
    var arg0 =
        _platform.api2wire_RefCellDisplayVideoTrackConstraints(constraints);
    var arg1 = api2wire_u32(idealFrameRate);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner
          .wire_display_video_track_constraints_ideal_frame_rate(arg0, arg1),
      parseSuccessData: _wire2api_SyncReturn_unit,
      constMeta: kDisplayVideoTrackConstraintsIdealFrameRateConstMeta,
      argValues: [constraints, idealFrameRate],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsIdealFrameRateConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_ideal_frame_rate",
            argNames: ["constraints", "idealFrameRate"],
          );

  void displayVideoTrackConstraintsExactFrameRate(
      {required RefCellDisplayVideoTrackConstraints constraints,
      required int exactFrameRate,
      dynamic hint}) {
    var arg0 =
        _platform.api2wire_RefCellDisplayVideoTrackConstraints(constraints);
    var arg1 = api2wire_u32(exactFrameRate);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner
          .wire_display_video_track_constraints_exact_frame_rate(arg0, arg1),
      parseSuccessData: _wire2api_SyncReturn_unit,
      constMeta: kDisplayVideoTrackConstraintsExactFrameRateConstMeta,
      argValues: [constraints, exactFrameRate],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kDisplayVideoTrackConstraintsExactFrameRateConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "display_video_track_constraints_exact_frame_rate",
            argNames: ["constraints", "exactFrameRate"],
          );

// Section: wire2api

  RefCellDisplayVideoTrackConstraints
      _wire2api_RefCellDisplayVideoTrackConstraints(dynamic raw) {
    return RefCellDisplayVideoTrackConstraints.fromRaw(raw[0], raw[1], raw[2]);
  }

  RefCellDisplayVideoTrackConstraints
      _wire2api_SyncReturn_RefCellDisplayVideoTrackConstraints(dynamic raw) {
    var pointBitLen = raw.length ~/ 3;
    var ptrList = List.filled(pointBitLen, 0);
    var dropList = List.filled(pointBitLen, 0);
    var lendList = List.filled(pointBitLen, 0);

    List.copyRange(ptrList, 0, raw, 0, pointBitLen);
    List.copyRange(dropList, 0, raw, pointBitLen, pointBitLen * 2);
    List.copyRange(lendList, 0, raw, pointBitLen * 2);

    int ptr = 0;
    int drop = 0;
    int lend = 0;

    if (pointBitLen == 8) {
      ptr = ByteData.view(Uint8List.fromList(ptrList).buffer).getUint64(0);
      drop = ByteData.view(Uint8List.fromList(dropList).buffer).getUint64(0);
      lend = ByteData.view(Uint8List.fromList(lendList).buffer).getUint64(0);
    } else if (pointBitLen == 4) {
      ptr = ByteData.view(Uint8List.fromList(ptrList).buffer).getUint32(0);
      drop = ByteData.view(Uint8List.fromList(dropList).buffer).getUint32(0);
      lend = ByteData.view(Uint8List.fromList(lendList).buffer).getUint32(0);
    }

    return RefCellDisplayVideoTrackConstraints.fromRaw(ptr, drop, lend);
  }

  void _wire2api_SyncReturn_unit(dynamic raw) {
    return;
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
int api2wire_u32(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

class DisplayVideoTrackConstraintsApiPlatform
    extends FlutterRustBridgeBase<DisplayVideoTrackConstraintsApiWire> {
  DisplayVideoTrackConstraintsApiPlatform(ffi.DynamicLibrary dylib)
      : super(DisplayVideoTrackConstraintsApiWire(dylib));
// Section: api2wire

  @protected
  ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>
      api2wire_RefCellDisplayVideoTrackConstraints(
          RefCellDisplayVideoTrackConstraints raw) {
    if (raw.isStale()) {
      throw 'Use after dispose.';
    }
    final ptr = inner.new_RefCellDisplayVideoTrackConstraints();
    _api_fill_to_wire_RefCellDisplayVideoTrackConstraints(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_4(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: api_fill_to_wire

  void _api_fill_to_wire_RefCellDisplayVideoTrackConstraints(
      RefCellDisplayVideoTrackConstraints apiObj,
      ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> wireObj) {
    wireObj.ref.ptr = FrbOpaque.share(apiObj).cast();
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class DisplayVideoTrackConstraintsApiWire implements FlutterRustBridgeWireBase {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  DisplayVideoTrackConstraintsApiWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  DisplayVideoTrackConstraintsApiWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  WireSyncReturnStruct wire_display_video_track_constraints_new() {
    return _wire_display_video_track_constraints_new();
  }

  late final _wire_display_video_track_constraints_newPtr =
      _lookup<ffi.NativeFunction<WireSyncReturnStruct Function()>>(
          'wire_display_video_track_constraints_new');
  late final _wire_display_video_track_constraints_new =
      _wire_display_video_track_constraints_newPtr
          .asFunction<WireSyncReturnStruct Function()>();

  WireSyncReturnStruct wire_display_video_track_constraints_device_id(
    ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> constraints,
    ffi.Pointer<wire_uint_8_list> device_id,
  ) {
    return _wire_display_video_track_constraints_device_id(
      constraints,
      device_id,
    );
  }

  late final _wire_display_video_track_constraints_device_idPtr = _lookup<
          ffi.NativeFunction<
              WireSyncReturnStruct Function(
                  ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_display_video_track_constraints_device_id');
  late final _wire_display_video_track_constraints_device_id =
      _wire_display_video_track_constraints_device_idPtr.asFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
              ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturnStruct wire_display_video_track_constraints_exact_height(
    ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> constraints,
    int exact_height,
  ) {
    return _wire_display_video_track_constraints_exact_height(
      constraints,
      exact_height,
    );
  }

  late final _wire_display_video_track_constraints_exact_heightPtr = _lookup<
          ffi.NativeFunction<
              WireSyncReturnStruct Function(
                  ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
                  ffi.Uint32)>>(
      'wire_display_video_track_constraints_exact_height');
  late final _wire_display_video_track_constraints_exact_height =
      _wire_display_video_track_constraints_exact_heightPtr.asFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>, int)>();

  WireSyncReturnStruct wire_display_video_track_constraints_ideal_height(
    ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> constraints,
    int ideal_height,
  ) {
    return _wire_display_video_track_constraints_ideal_height(
      constraints,
      ideal_height,
    );
  }

  late final _wire_display_video_track_constraints_ideal_heightPtr = _lookup<
          ffi.NativeFunction<
              WireSyncReturnStruct Function(
                  ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
                  ffi.Uint32)>>(
      'wire_display_video_track_constraints_ideal_height');
  late final _wire_display_video_track_constraints_ideal_height =
      _wire_display_video_track_constraints_ideal_heightPtr.asFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>, int)>();

  WireSyncReturnStruct wire_display_video_track_constraints_exact_width(
    ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> constraints,
    int exact_width,
  ) {
    return _wire_display_video_track_constraints_exact_width(
      constraints,
      exact_width,
    );
  }

  late final _wire_display_video_track_constraints_exact_widthPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
              ffi.Uint32)>>('wire_display_video_track_constraints_exact_width');
  late final _wire_display_video_track_constraints_exact_width =
      _wire_display_video_track_constraints_exact_widthPtr.asFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>, int)>();

  WireSyncReturnStruct wire_display_video_track_constraints_ideal_width(
    ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> constraints,
    int ideal_width,
  ) {
    return _wire_display_video_track_constraints_ideal_width(
      constraints,
      ideal_width,
    );
  }

  late final _wire_display_video_track_constraints_ideal_widthPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
              ffi.Uint32)>>('wire_display_video_track_constraints_ideal_width');
  late final _wire_display_video_track_constraints_ideal_width =
      _wire_display_video_track_constraints_ideal_widthPtr.asFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>, int)>();

  WireSyncReturnStruct wire_display_video_track_constraints_ideal_frame_rate(
    ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> constraints,
    int ideal_frame_rate,
  ) {
    return _wire_display_video_track_constraints_ideal_frame_rate(
      constraints,
      ideal_frame_rate,
    );
  }

  late final _wire_display_video_track_constraints_ideal_frame_ratePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncReturnStruct Function(
                      ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
                      ffi.Uint32)>>(
          'wire_display_video_track_constraints_ideal_frame_rate');
  late final _wire_display_video_track_constraints_ideal_frame_rate =
      _wire_display_video_track_constraints_ideal_frame_ratePtr.asFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>, int)>();

  WireSyncReturnStruct wire_display_video_track_constraints_exact_frame_rate(
    ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> constraints,
    int exact_frame_rate,
  ) {
    return _wire_display_video_track_constraints_exact_frame_rate(
      constraints,
      exact_frame_rate,
    );
  }

  late final _wire_display_video_track_constraints_exact_frame_ratePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncReturnStruct Function(
                      ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>,
                      ffi.Uint32)>>(
          'wire_display_video_track_constraints_exact_frame_rate');
  late final _wire_display_video_track_constraints_exact_frame_rate =
      _wire_display_video_track_constraints_exact_frame_ratePtr.asFunction<
          WireSyncReturnStruct Function(
              ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>, int)>();

  ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>
      new_RefCellDisplayVideoTrackConstraints() {
    return _new_RefCellDisplayVideoTrackConstraints();
  }

  late final _new_RefCellDisplayVideoTrackConstraintsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints>
              Function()>>('new_RefCellDisplayVideoTrackConstraints');
  late final _new_RefCellDisplayVideoTrackConstraints =
      _new_RefCellDisplayVideoTrackConstraintsPtr.asFunction<
          ffi.Pointer<wire_RefCellDisplayVideoTrackConstraints> Function()>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_4(
    int len,
  ) {
    return _new_uint_8_list_4(
      len,
    );
  }

  late final _new_uint_8_list_4Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_uint_8_list> Function(
              ffi.Int32)>>('new_uint_8_list_4');
  late final _new_uint_8_list_4 = _new_uint_8_list_4Ptr
      .asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void free_WireSyncReturnStruct(
    WireSyncReturnStruct val,
  ) {
    return _free_WireSyncReturnStruct(
      val,
    );
  }

  late final _free_WireSyncReturnStructPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturnStruct)>>(
          'free_WireSyncReturnStruct');
  late final _free_WireSyncReturnStruct = _free_WireSyncReturnStructPtr
      .asFunction<void Function(WireSyncReturnStruct)>();
}

class wire_RefCellDisplayVideoTrackConstraints extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
